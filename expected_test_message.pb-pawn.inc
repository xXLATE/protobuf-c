/* Generated by the protocol buffer compiler for Pawn.  DO NOT EDIT! */
/* source: test_message.proto */

#if defined _TEST_MESSAGE_PB_PAWN_INC_
#endinput
#endif
#define _TEST_MESSAGE_PB_PAWN_INC_

#include "test_enum.pb.pawn.inc"

// test_message.Status
enum Status {
  Status_Unknown = 0,
  Status_Active = 1,
  Status_Inactive = 2
}

// test_message.User
enum struct User {
  int id;
  char name[256];
  Status status;
  bool isActive;
  float score;
}

// test_message.Group  
enum struct Group {
  int id;
  char name[256];
  User members[1024]; // repeated field
  int membersCount;
}

// Service constants for UserService
enum UserServiceMethods {
  UserService_GetUser = 1,
  UserService_CreateUser = 2,
  UserService_UpdateUser = 3,
  UserService_DeleteUser = 4
}

/* TEST__USER field numbers */
#define TEST__USER__ID_FIELD 1
#define TEST__USER__NAME_FIELD 2
#define TEST__USER__EMAIL_FIELD 3
#define TEST__USER__STATUS_FIELD 4
#define TEST__USER__TAGS_FIELD 5

/* TEST__USER_REQUEST field numbers */
#define TEST__USER_REQUEST__USER_ID_FIELD 1
#define TEST__USER_REQUEST__INCLUDE_TAGS_FIELD 2

/* TEST__USER_RESPONSE field numbers */
#define TEST__USER_RESPONSE__USER_FIELD 1
#define TEST__USER_RESPONSE__SUCCESS_FIELD 2
#define TEST__USER_RESPONSE__ERROR_MESSAGE_FIELD 3

/* TEST__USER_SERVICE service constants */
#define TEST__USER_SERVICE__GET_USER_METHOD 1
#define TEST__USER_SERVICE__UPDATE_USER_METHOD 2

/* End of test_message.proto */

// Message: MyMessage
enum E_MYMESSAGE_DATA {
  P_VALUE,
  P_NAME,
  P_ENABLED,
  P_SCORE,
  P_DATA,
  P_NESTED_ENUM,
  P_NESTED_MESSAGE,
  P_FOREIGN_ENUM,
};

// Enum: MyMessage.NestedEnum
#define MYMESSAGE_NESTEDENUM_VAL1 0
#define MYMESSAGE_NESTEDENUM_VAL2 1

// Message: MyMessage.NestedMessage
enum E_MYMESSAGE_NESTEDMESSAGE_DATA {
  P_NESTED_VALUE,
}; 